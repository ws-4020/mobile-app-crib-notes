// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickerAccessory with all props should be applied properly: PickerBackdrop with all props. 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "red",
      "flexDirection": "row",
      "justifyContent": "flex-end",
      "paddingHorizontal": 10,
      "paddingVertical": 8,
    }
  }
  testID="PickerAccessory"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="deleteLink"
  >
    <Text
      style={
        Object {
          "color": "yellow",
          "fontWeight": "bold",
          "paddingHorizontal": 10,
        }
      }
      testID="deleteText"
    >
      delete
    </Text>
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  />
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="cancelLink"
  >
    <Text
      style={
        Object {
          "color": "green",
          "fontWeight": "bold",
          "paddingHorizontal": 10,
        }
      }
      testID="cancelText"
    >
      cancel
    </Text>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="doneLink"
  >
    <Text
      style={
        Object {
          "color": "aqua",
          "fontWeight": "bold",
          "paddingHorizontal": 10,
        }
      }
      testID="doneText"
    >
      done
    </Text>
  </View>
</View>
`;
