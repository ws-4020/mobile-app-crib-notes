// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DateTimePicker only with required props renders successfully if invisible: DateTimePicker if invisible. 1`] = `
<View
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="pressableContainer"
>
  <View
    pointerEvents="box-only"
  >
    <TextInput
      allowFontScaling={true}
      editable={false}
      rejectResponderTermination={true}
      testID="textInput"
      underlineColorAndroid="transparent"
    />
  </View>
</View>
`;

exports[`DateTimePicker only with required props renders successfully if visible: DateTimePicker if visible. 1`] = `
Array [
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="pressableContainer"
  >
    <View
      pointerEvents="box-only"
    >
      <TextInput
        allowFontScaling={true}
        editable={false}
        rejectResponderTermination={true}
        testID="textInput"
        underlineColorAndroid="transparent"
        value="2022-06-30T15:00:00.000Z"
      />
    </View>
  </View>,
  <RNDateTimePicker
    date={1656601200000}
    displayIOS="calendar"
    enabled={true}
    mode="date"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "height": 216,
      }
    }
    testID="pickerItems"
  />,
]
`;

exports[`DateTimePicker with all props should be applied all properly with custom xxx component: DateTimePicker all properly with custom xxx component. 1`] = `
Array [
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="pressableContainer"
  >
    <View
      pointerEvents="box-only"
    >
      <View
        testID="customTextInput"
      />
    </View>
  </View>,
  <RNDateTimePicker
    date={1643641200000}
    displayIOS="calendar"
    enabled={true}
    maximumDate={1656601200000}
    minimumDate={1612105200000}
    mode="date"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 216,
        },
        Object {
          "backgroundColor": "yellow",
        },
      ]
    }
    testID="pickerItems"
  />,
]
`;

exports[`DateTimePicker with all props should be applied all properly with default xxx component: DateTimePicker all properly with default xxx component. 1`] = `
Array [
  <View
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    testID="pressableContainer"
  >
    <View
      pointerEvents="box-only"
    >
      <TextInput
        allowFontScaling={true}
        editable={false}
        placeholder="please select..."
        rejectResponderTermination={true}
        style={
          Object {
            "color": "red",
          }
        }
        testID="textInput"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>,
  <RNDateTimePicker
    date={1643641200000}
    displayIOS="calendar"
    enabled={true}
    maximumDate={1656601200000}
    minimumDate={1612105200000}
    mode="date"
    onChange={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "height": 216,
        },
        Object {
          "backgroundColor": "yellow",
        },
      ]
    }
    testID="pickerItems"
  />,
]
`;
